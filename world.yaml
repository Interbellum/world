openapi: 3.0.0
info:
  title: World
  version: '1.0'
  description: World API. People living in the world.
  contact:
    name: Daniil Koltsov
    email: forzalino@gmail.com
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{user_id}':
    parameters:
      - $ref: '#/components/parameters/user_id'
    get:
      summary: Get User Info by User ID
      tags:
        - user
      operationId: get-users-userId
      description: Retrieve the information of the man with the matching ID.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      description: Update the information of an existing user.
      tags:
        - user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: ''
      operationId: delete-users-id
      tags:
        - user
      description: Delete a user.
      responses:
        '200':
          description: OK
  /users:
    post:
      summary: Create New User
      operationId: post-user
      description: Create a new man.
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              x-examples:
                example-1:
                  email: alice.smith@gmail.com
        description: We need just an email to create a user.
      responses:
        '200':
          description: OK
    parameters: []
    get:
      summary: Get All Users
      operationId: get-users
      responses:
        '200':
          description: OK
      tags:
        - user
  /auth/login:
    post:
      summary: ''
      operationId: post-auth-login
      responses:
        '200':
          description: OK
      description: Login as a user
      tags:
        - auth
  /auth/logout:
    post:
      summary: ''
      operationId: post-auth-logout
      responses:
        '200':
          description: OK
      tags:
        - auth
      description: Log out as a user.
components:
  schemas:
    User:
      type: object
      x-examples:
        example-1:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      title: User
      description: A user
      nullable: true
      properties:
        id:
          type: integer
          format: int64
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
        emailVerified:
          type: boolean
      required:
        - id
    Country:
      title: Country
      x-stoplight:
        id: jbh8kqo3ouxqj
      type: object
      properties:
        id:
          type: string
      description: A world country
    City:
      title: City
      x-stoplight:
        id: z1akdxgyj133c
      type: object
      properties:
        id:
          type: string
  securitySchemes:
    Key:
      name: Hello
      type: apiKey
      in: cookie
  parameters:
    user_id:
      name: user_id
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 0
      description: An id of a user
  requestBodies: {}
  responses: {}
  examples: {}
tags:
  - name: auth
  - name: user
